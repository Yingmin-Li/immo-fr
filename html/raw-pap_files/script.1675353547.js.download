/*--------------------------------------
  JAVASCRIPT FRAMEWORK BROWNIE
--------------------------------------*/

/*-----------------------
  Fancybox v4
-----------------------*/

Fancybox.bind("[data-fancybox]");

/*-----------------------
  FIXES
-----------------------*/

/**
 * Fixing the missing Array.indexOf method in IE8 or other
 * @see http://stackoverflow.com/questions/3629183/why-doesnt-indexof-work-on-an-array-ie8
 */
if (!Array.prototype.indexOf) {
	Array.prototype.indexOf = function (elt /*, from*/) {
		var len = this.length >>> 0;
		var from = Number(arguments[1]) || 0;
		from = (from < 0) ? Math.ceil(from) : Math.floor(from);
		if (from < 0)
			from += len;
		for (; from < len; from++) {
			if (from in this && this[from] === elt)
				return from;
		}
		return -1;
	};
}

/**
 * Don't Act on Absent Elements - Best: Add a doOnce plugin.
 * @param func
 * @returns {jQuery.fn}
 * @see https://learn.jquery.com/performance/dont-act-on-absent-elements/
 */
jQuery.fn.doOnce = function (func) {
	this.length && func.apply(this);
	return this;
};

/**
 * Get nested property without error
 * @see http://stackoverflow.com/questions/2631001/javascript-test-for-existence-of-nested-object-key
 * @return mixed|false
 */
function getNested(obj /*, level1, level2, ... levelN*/) {
	var args = Array.prototype.slice.call(arguments, 1);
	for (var i = 0; i < args.length; i++) {
		if (!obj || !obj.hasOwnProperty(args[i])) {
			return null;
		}
		obj = obj[args[i]];
	}
	return obj;
}

/**
 * Base64 Encode / Decode
 */

var Base64 = { _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (e) { var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while (f < e.length) { n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if (isNaN(r)) { u = a = 64 } else if (isNaN(i)) { a = 64 } t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a) } return t }, decode: function (e) { var t = ""; var n, r, i; var s, o, u, a; var f = 0; e = e.replace(/[^A-Za-z0-9+/=]/g, ""); while (f < e.length) { s = this._keyStr.indexOf(e.charAt(f++)); o = this._keyStr.indexOf(e.charAt(f++)); u = this._keyStr.indexOf(e.charAt(f++)); a = this._keyStr.indexOf(e.charAt(f++)); n = s << 2 | o >> 4; r = (o & 15) << 4 | u >> 2; i = (u & 3) << 6 | a; t = t + String.fromCharCode(n); if (u != 64) { t = t + String.fromCharCode(r) } if (a != 64) { t = t + String.fromCharCode(i) } } t = Base64._utf8_decode(t); return t }, _utf8_encode: function (e) { e = e.replace(/rn/g, "n"); var t = ""; for (var n = 0; n < e.length; n++) { var r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r) } else if (r > 127 && r < 2048) { t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128) } else { t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128) } } return t }, _utf8_decode: function (e) { var t = ""; var n = 0; var r = c1 = c2 = 0; while (n < e.length) { r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r); n++ } else if (r > 191 && r < 224) { c2 = e.charCodeAt(n + 1); t += String.fromCharCode((r & 31) << 6 | c2 & 63); n += 2 } else { c2 = e.charCodeAt(n + 1); c3 = e.charCodeAt(n + 2); t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63); n += 3 } } return t } };

/**
 * Afficher un nombre (équivalent PHP)
 */

function number_format(number, decimals, dec_point, thousands_sep) {
	number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
	var n = !isFinite(+number) ? 0 : +number,
		prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
		sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
		dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
		s = '',
		toFixedFix = function (n, prec) {
			var k = Math.pow(10, prec);
			return '' + (Math.round(n * k) / k)
				.toFixed(prec);
		};
	// Fix for IE parseFloat(0.55).toFixed(0) = 0;
	s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))
		.split('.');
	if (s[0].length > 3) {
		s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
	}
	if ((s[1] || '')
		.length < prec) {
		s[1] = s[1] || '';
		s[1] += new Array(prec - s[1].length + 1)
			.join('0');
	}
	return s.join(dec);
}

/**
 * Arrondi décimal
 * https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Math/round
 */
(function () {
	/**
	 * Ajustement décimal d'un nombre
	 *
	 * @param {String}  type : Le type d'ajustement souhaité.
	 * @param {Number}  value : le nombre à traité The number.
	 * @param {Integer} exp  : l'exposant (le logarithme en base 10 de l'ajustement).
	 * @returns {Number} la valeur ajustée.
	 */
	function decimalAdjust(type, value, exp) {
		// Si la valeur de exp n'est pas définie ou vaut zéro...
		if (typeof exp === 'undefined' || +exp === 0) {
			return Math[type](value);
		}
		value = +value;
		exp = +exp;
		// Si la valeur n'est pas un nombre
		// ou si exp n'est pas un entier...
		if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
			return NaN;
		}
		// Si la valeur est négative
		if (value < 0) {
			return -decimalAdjust(type, -value, exp);
		}
		// Décalage
		value = value.toString().split('e');
		value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
		// Décalage inversé
		value = value.toString().split('e');
		return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
	}

	// Arrondi décimal
	if (!Math.round10) {
		Math.round10 = function (value, exp) {
			return decimalAdjust('round', value, exp);
		};
	}
	// Arrondi décimal inférieur
	if (!Math.floor10) {
		Math.floor10 = function (value, exp) {
			return decimalAdjust('floor', value, exp);
		};
	}
	// Arrondi décimal supérieur
	if (!Math.ceil10) {
		Math.ceil10 = function (value, exp) {
			return decimalAdjust('ceil', value, exp);
		};
	}
})();

/**
 * Detect if user is tabing to show outline on button, input...
 * @see https://hackernoon.com/removing-that-ugly-focus-ring-and-keeping-it-too-6c8727fefcd2
 */
function handleFirstTab(e) {
	if (e.keyCode === 9) { // the "I am a keyboard user" key
		document.body.classList.add('user-is-tabbing');
		window.removeEventListener('keydown', handleFirstTab);
	}
}

window.addEventListener('keydown', handleFirstTab);

/*-----------------------
  JQUERY STANDARD
-----------------------*/
$(function () {

	/*-----------------------
	  JQUERY UI
	-----------------------*/

	/**
	 * UI TABS
	 */
	$(".tabs-box").tabs();

	/**
	 * UI ACCORDION
	 */
	$(".accordion-box").accordion({
		heightStyle: "content",
		active: false,
		collapsible: true
	});

	/**
	 * UI DIALOG
	 */

	// Fix pour la suppression du focus automatique sur le premier champ si formaulaire dans la popin
	$.ui.dialog.prototype._focusTabbable = $.noop;

	// Titre de la dialogue


	// init handler state and add close button
	$('.dialog-box-content').each(function () {
		var title = $(this).attr('title');
		$(this).prepend('<p class="h3 dialog-box-title"></p>');
		$(this).find(".dialog-box-title").text(title);
	});

	// Boite de dialogue
	$(".dialog-box-content").each(function () {

		// Initialisation de la configuration
		var data = $(this).data('dialogBox') || {};
		if (typeof data.closeOnOverlayClicked === 'undefined') {
			data.closeOnOverlayClicked = true;
		}
		if (typeof data.showTitlebarClose === 'undefined') {
			data.showTitlebarClose = true;
		}
		$(this).data('dialogBox', data);

		// Initialisation de la dialog
		$(this).dialog($.extend({
			autoOpen: false,
			closeOnEscape: true,
			modal: true,
			draggable: false,
			resizable: false,
			width: 650,
			show: {
				effect: "drop",
				direction: "up",
				easing: "easeOutCubic",
				duration: 500
			},
			hide: {
				effect: "fade",
				duration: 250
			},
			open: function () {
				// Fermer la dialog box quand on clique sur l'overlay
				var self = $(this);
				if (self.data('dialogBox').closeOnOverlayClicked) {
					$('.ui-widget-overlay').click(function () {
						self.dialog('close');
						return false;
					});
				}
				if (!self.data('dialogBox').showTitlebarClose) {
					self.closest('.ui-dialog').find(".ui-dialog-titlebar-close").remove();
				}
			}
		}, $(this).data('dialogBox')));

		// Classes supplémentaires
		var classes = [];
		if ($(this).data('dialogBox') && $(this).data('dialogBox').sticky) {
			classes.push('ui-dialog-fixed');
		}
		if ($(this).hasClass('dialog-box-content-alt')) {
			classes.push('ui-dialog-alt');
		}
		if (classes.length > 0) {
			$(this).dialog({ dialogClass: classes.join(' ') });
		}

	});

	// Lorsqu'on change le contenu de la dialog, il faut appeler cette méthode
	$(".dialog-box-content").on("contentchanged", function () {
		$(this).dialog("widget").position({
			my: 'center',
			at: 'center',
			of: window
		});
	})

	// Lien d'ouverture de boite de dialogue
	$(document).on("click", ".dialog-box-handler", function () {
		console.log($($(this).attr('href')));
		$($(this).attr('href')).dialog('open');
		return false;
	});
	$(".dialog-box-handler-in-option").on("click", function () {
		$($(this).attr('href')).dialog('open');
		return false;
	});

	/**
	 * UI Datepicker
	 */
	$.datepicker.setDefaults({
		closeText: 'Fermer',
		prevText: 'Pr&eacute;c&eacute;dent',
		nextText: 'Suivant',
		currentText: 'Aujourd\'hui',
		monthNames: ['Janvier', 'F&eacute;vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Ao&ucirc;t', 'Septembre', 'Octobre', 'Novembre', 'D&eacute;cembre'],
		monthNamesShort: ['Janv.', 'F&eacute;vr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Ao&ucirc;t', 'Sept.', 'Oct.', 'Nov.', 'D&eacute;c.'],
		dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
		dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
		dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
		weekHeader: 'Sem.',
		dateFormat: 'dd/mm/yy'
	});
	$(".datepicker").each(function () {
		$(this).datepicker($(this).data('datepicker') || {});
	});

	/*-----------------------
	  PAIEMENT
	-----------------------*/

	/**
	 * Règlements Be2bill
	 */
	$("#js-payment-form").submit();


	/*-----------------------
	  PLUGIN JQUERY
	-----------------------*/

	/**
	 * imgLiquid (resize-crop automatique des images)
	 */
	$(".img-liquid").css({ "display": "block" }).imgLiquid();

	/**
	 * FancyBox v3
	 */
	/*
	$('[data-fancybox]').fancybox({
		loop: true,
		infobar: false,
		buttons: [
			//"zoom",
			//"share",
			//"slideShow",
			//"fullScreen",
			//"download",
			"thumbs",
			"close"
		]
	});
	*/

	/**
	 * OWL Carousel
	 */
	$(".owl-carousel").each(function () {
		$(this).owlCarousel($.extend({
			// ... default options
		}, $(this).data('owlCarousel') || {}));
	});

	// on deplace le lien de l'item dans le carousel
	$(".search-list-item-alt .owl-carousel").each(function () {
		var link = $(this).find(".owl-stage");
		$(this).parent().find(".item-thumb-link").prependTo(link);
	});

	var owl = $('.search-list-item-alt .owl-carousel');

	owl.on('changed.owl.carousel', function (event) {

		// on compte le nombre de owl-dot et on ajoute la classe correspondante
		var count = $(this).find(".owl-dot").length;
		$(this).find(".owl-dots").addClass('owl-dots-count-' + count);

		// on enregistre la position de l'enfant owl-dot et on ajoute la classe correspondante
		var index = $(this).find(".owl-dot.active").index();
		var active = index + 1;
		var inactive = active - 1;
		var inactive2 = active + 1;
		$(this).find(".owl-dots").addClass('owl-dots-active-' + active);
		$(this).find(".owl-dots").removeClass('owl-dots-active-' + inactive);
		$(this).find(".owl-dots").removeClass('owl-dots-active-' + inactive2);
		$(this).find(".owl-dots-active-1").removeClass('owl-dots-active-' + count);

		if ($(this).find(".owl-dot:first-child").hasClass('active')) {
			$(this).find(".owl-dots").removeClass('owl-dots-active-' + count);
		}
	});

	/**
	 * Tooltipster
	 */
	$(".tooltip").each(function () {
		$(this).tooltipster($.extend({
			contentAsHTML: true
		}, $(this).data('tooltipster') || {}));
	});

	/**
	 * Auto-height (plugin davidjbradshaw)
	 */
	$('iframe.auto-height').each(function () {
		$(this).iFrameResize($(this).data('autoHeight') || {});
	});

	/**
	 * SlideToggle
	 */

	// init content state
	$(".slide-toggle-content").each(function () {
		$(this).hide();
		if ($(this).hasClass('slide-toggle-opened-default')) {
			$(this).show();
		}
	});

	// init handler state
	$(".slide-toggle-handler-opened").each(function () {
		$(this).hide();
		$(this).parent().find(".slide-toggle-handler-closed").show();
		if ($(this).parent().hasClass('slide-toggle-opened-default')) {
			$(this).show();
			$(this).parent().find(".slide-toggle-handler-closed").hide();
		}
	});

	// bind toggle on click
	$(".slide-toggle-handler").click(function () {
		var $self = $(this);
		$($(this).attr('href')).slideToggle({
			complete: function () {
				$self.find('.slide-toggle-handler-closed, .slide-toggle-handler-opened').toggle();
			}
		});
		return false;
	});

	/*-----------------------
	  UI BROWNIE
	-----------------------*/

	/**
	 * Sticky content
	 */
	$('.sticky').each(function () {
		// grab the initial top offset of the navigation
		var stickyNavTop = $(this).offset().top - 122;
		var itemWidth = $(this).width();
		var itemHeight = $(this).outerHeight(true);

		// our function that decides weather the navigation bar should have "fixed" css position or not.
		var stickyItem = function () {
			var scrollTop = $(window).scrollTop(); // our current vertical position from the top

			// if we've scrolled more than the navigation, change its position to fixed to stick to top,
			if (scrollTop > stickyNavTop) {
				$('.sticky').addClass('sticky-active').width(itemWidth);
				$('.sticky + *').css({ 'margin-top': itemHeight });
				// otherwise change it back to relative
			} else {
				$('.sticky').removeClass('sticky-active');
				$('.sticky + div').css({ 'margin-top': '0' });
			}
		};

		stickyItem();
		// and run it again every time you scroll
		$(window).scroll(function () {
			stickyItem();
		});
	});

	/**
	 * Sticky bottom
	 */
	$('.sticky-bottom').each(function () {
		// grab the initial top offset of the navigation

		// our function that decides weather the navigation bar should have "fixed" css position or not.
		var stickyItem = function () {
			var scrollTop = $(window).scrollTop(); // our current vertical position from the top

			// if we've scrolled more than the navigation, change its position to fixed to stick to top,
			if (scrollTop > 200) {
				$('.sticky-bottom').addClass('sticky-bottom-active');
				// otherwise change it back to relative
			} else {
				$('.sticky-bottom').removeClass('sticky-bottom-active');
			}
		};

		stickyItem();
		// and run it again every time you scroll
		$(window).scroll(function () {
			stickyItem();
		});
	});

	/**
	 * Panel
	 */

	// init handler state and add close button
	$('.panel-mobile-content').each(function () {
		var title = $(this).attr('title');

		$(this).prepend('<div class="panel-mobile-title"></div>');
		$(this).find(".panel-mobile-title").text(title);
	});

	// open panel on click
	$('.panel-mobile-handler').on('click', function () {
		var href = $(this).attr('href');

		$($(this).attr('href')).prepend('<a class="panel-mobile-handler-close" href=""></a>');
		$($(this).attr('href')).find(".panel-mobile-handler-close").attr('href', href);
		$($(this).attr('href')).toggleClass('panel-mobile-content-opened');
		$('body').toggleClass("no-scroll");
		return false;
	});

	$('body').on('click', '.panel-mobile-handler-close', function () {
		$($(this).attr('href')).toggleClass('panel-mobile-content-opened');
		$('body').toggleClass("no-scroll");
		return false;
	});

	/**
	 * List searchbar mobile
	 */

	// init body state and searchbar content
	$('body').has(".list-searchbar-mobile").addClass("has-list-searchbar-mobile");

	$('.list-searchbar-mobile .btn').each(function () {
		var breadcrumb_title = $('.breadcrumb h1, h1#list-searchbar-mobile-h1').text();

		$(this).prepend('<h1></h1>');
		$(this).find("h1").text(breadcrumb_title);
		$(this).prepend('<span class="icon icon-search"></span>');
	});

	/**
	 * Topnav responsive
	 */
	$('header .icon-hamburger').on('click', function () {
		$(this).toggleClass('icon-close-transformation');
		$('.topnav').toggleClass("topnav-hamburgered");
		$('.brand-box').toggleClass("brand-box-hamburgered");
		$('body').toggleClass("no-scroll");
	});

	/**
	 * Navbar responsive
	 */
	$('.navbar').wrap('<div class="navbar-wrapper"></div>');
	$('.navbar').wrap('<div class="wrapper"></div>');

	/**
	 * Navbar sticky
	 */
	$('.navbar-wrapper').has('.navbar-sticky').doOnce(function () {
		// Déplacer la classe sticky de la navbar vers le wrapper
		$('.navbar-wrapper').has('.navbar-sticky').addClass('navbar-sticky');
		$('.navbar-wrapper').find('.navbar-sticky').removeClass('navbar-sticky');

		// Enregistrer la position initiale du bord supérieur du wrapper sticky
		$('.navbar-wrapper.navbar-sticky').each(function () {
			$(this).data('originalOffsetTop', $(this).offset().top);
		})

		// Si le bord inférieur du header est plus bas que la position initiale du sticky, alors on active le sticky
		$('.navbar-wrapper.navbar-sticky').on('refreshStickyItem', function () {
			var active = $(window).scrollTop() + $('header').outerHeight(true) > $(this).data('originalOffsetTop');
			$(this).toggleClass('navbar-sticky-active', active);
			if (active) {
				$(this).css({ top: $('header').outerHeight(true) });
			}
		});

		$(window).on('scroll', function () {
			$('.navbar-wrapper.navbar-sticky').trigger('refreshStickyItem');
		});

	});

	/**
	 * Anchor smooth scroll
	 */
	$('.smooth-scroll-anchor').on('click', function () {
		var scrollTopExpected = Math.round($('[name="' + $.attr(this, 'href').substr(1) + '"]').offset().top);
		scrollTopExpected -= $('.navbar-wrapper.navbar-sticky,.navbar-fixed').outerHeight(true);
		scrollTopExpected -= $('header').outerHeight(true);
		if ($(window).scrollTop() == 0) {
			scrollTopExpected -= $('.navbar-wrapper.navbar-sticky,.navbar-fixed').outerHeight(true);
		}
		$('html, body').animate({ scrollTop: scrollTopExpected }, 1000);
		return false;
	});

	/**
	 * Cover big background avec hauteur en fonction du contenu
	 */
	function coverBigHeight() {
		$('.cover-big').each(function () {
			var cover_height = $(this).height();
			$(this).css("background-size", "auto" + " " + cover_height + "px");
		});
	}

	$(document).ready(function () {
		coverBigHeight();
		$(window).resize(coverBigHeight);
	});

	/**
	 * Marge haute de la navbar si utilisateur connecté
	 */
	$('.topnav').has(".dropdown button small").addClass("topnav-extended");
	$('.topnav').has(".dropdown a small").addClass("topnav-extended");

	/**
	 * Table responsive
	 */
	$('table').wrap("<div class='table-responsive'></div>");

	/**
	 * Cookie banner
	 * - utilisé pour le bandeau fixe Covid sur PAP
	 */
	$(".cookie-banner").doOnce(function () {
		$('.cookie-banner .btn').on('click', function (c) {
			$('.cookie-banner').fadeOut('fast', function (c) {
				$('.cookie-banner').remove();
			});
		});
	});

	/**
	 * Filter bar
	 */
	$('.filter-bar').doOnce(function () {
		var $filterBar = $(this);

		// Création des items de menu et de l'overlay
		$filterBar.find('.wrapper').wrap('<div class="bar"></div>');
		$filterBar.prepend('<div class="overlay"></div>');

		// Actions
		$filterBar.on('refresh', function () {
			// Tout masquer
			$(this).find('.overlay').hide();
			$(this).find('.item').removeClass('item-opened');
			$(this).find('.item .item-handler').removeClass('item-handler-opened');
			$(this).find('.item .item-dropdown').hide();

			// Afficher l'item sélectionné (s'il y en a un)
			var $itemSelected = $filterBar.data('itemSelected');
			if (!$itemSelected)
				return;
			$(this).find('.overlay').show();
			$itemSelected.addClass('item-opened');
			$itemSelected.find('.item-handler').addClass('item-handler-opened');
			$itemSelected.find('.item-dropdown').show();

		});

		// Evenements
		$filterBar.find('.item .item-handler').click(function () {
			var $itemSelected = $filterBar.data('itemSelected');
			var $itemToBeSelected = $(this).closest('.item');
			if ($itemSelected && $itemSelected[0] == $itemToBeSelected[0])
				$itemToBeSelected = null;
			$filterBar.data('itemSelected', $itemToBeSelected);
			$filterBar.trigger('refresh');
		});
		$filterBar.find('.overlay').click(function () {
			$filterBar.data('itemSelected', null);
			$filterBar.trigger('refresh');
		});
		$filterBar.find('.dialog-box-handler').click(function () {
			$filterBar.data('itemSelected', null);
			$filterBar.trigger('refresh');
		});

		// Init
		$filterBar.data('itemSelected', null);
		$filterBar.trigger('refresh');

	});

	/**
	 * Navbar avec scroll horizontal et boutons suivants/précédents
	 */

	$('.navbar-fixed-wrapper').prepend('<div class="item-arrows"><a href="#" class="item-arrow item-left-arrow hidden"></a><a href="#" class="item-arrow item-right-arrow"></a></div>');

	$(".navbar-fixed-wrapper").doOnce(function() {

		var scrollDuration = 200; // ms
		var scrollStep = 400; // pixels -- $menuWrapper.outerWidth() - 150 ?
		var arrowMargin = 0; // pixels -- get some relevant size for the paddle triggering point

		var $menuWrapper = $(".navbar-fixed-wrapper");
		var $menu        = $menuWrapper.find(".navbar-fixed");
		var $arrows     = $menuWrapper.find(".item-arrows");
		var $leftArrow  = $menuWrapper.find(".item-left-arrow");
		var $rightArrow = $menuWrapper.find(".item-right-arrow");
		var $btn         = $menuWrapper.find(".btn");
		var $current     = $menuWrapper.find(".btn.current");


		$menu.on("refresh", function() {

			var scrollOffset = Math.ceil($menu.scrollLeft());
			var menuVisibleSize = $menuWrapper.outerWidth();
			var menuSize = $menu[0].scrollWidth;

			var showLeftArrow = scrollOffset > 0;
			var showRightArrow = scrollOffset + menuVisibleSize < menuSize;

			$leftArrow.toggle(showLeftArrow);
			$rightArrow.toggle(showRightArrow);

		})

		$menu.on("scroll", function() {
			$menu.trigger("refresh");
		});

		$(window).on("resize", function() {
			$menu.trigger("refresh");
		});

		$rightArrow.on("click", function() {
			$menu.animate({
				scrollLeft: $menu.scrollLeft() + scrollStep
			}, scrollDuration);
			return false;
		});

		$leftArrow.on("click", function() {
			$menu.animate({
				scrollLeft: $menu.scrollLeft() - scrollStep
			}, scrollDuration);
			return false;
		});

		$menu.trigger("refresh");

		// Init
		var initialScroll = 0;
		if ($current.length > 0) {
			initialScroll = initialScroll + $current.outerWidth() / 2;
			initialScroll = initialScroll - $menuWrapper.outerWidth() / 2;
			$.each($current.prevAll(), function() {
				initialScroll = initialScroll + $(this).outerWidth();
			});
		}
		if (initialScroll > 0) {
			$menu.animate({
				scrollLeft: initialScroll
			}, scrollDuration);
		}

	});

	/**
	 * Loader
	 */
	$('.loader').append(new Array(9).join('<div />'));

	/**
	 * Boutons Lire plus Lire moins d'un texte
	 */

	$(".readmore-content").on("reload", function () {
		var $self = $(this);
		var id = $self.attr('id');
		var $readmore_handler_clip = $(".readmore-handler-clip[href='#" + $(this).attr('id') + "']");
		var $readmore_handler_unclip = $(".readmore-handler-unclip[href='#" + $(this).attr('id') + "']");

		var height_unclipped = $self.height();
		var height_clipped = 200;

		// Early exit
		if (height_unclipped <= height_clipped) {
			$readmore_handler_clip.hide();
			$readmore_handler_unclip.hide();
			return;
		}

		// Actions
		$self.on("refresh", function () {
			$self.height($self.data('isClipped') ? height_clipped : height_unclipped);
			$self.toggleClass("readmore-content-clipped", $self.data('isClipped'));
			$readmore_handler_clip.toggle(!$self.data('isClipped'));
			$readmore_handler_unclip.toggle($self.data('isClipped'));
		});

		// Evénements
		$readmore_handler_unclip.click(function () {
			$self.data('isClipped', false);
			$self.trigger("refresh");
			return false;
		})

		$readmore_handler_clip.click(function () {
			$self.data('isClipped', true);
			$self.trigger("refresh");
			return false;
		})

		// Initialisation
		$self.data('isClipped', true);
		$self.trigger("refresh");
	});

	$(".readmore-content").trigger("reload");

	/*-----------------------
	  FORMULAIRES
	-----------------------*/

	/**
	 * Placeholder (pour les browsers ne le supportant pas nativement)
	 */
	$("input, textarea").placeholder();

	/**
	 * Autocomplete simple
	 */
	$(".autocomplete").each(function () {
		// Champs et valeurs utilisées
		var $input = $(this);
		var data = $input.data('autocomplete') || {};
		var $inputKey = $(data.inputKey);
		var sourceInit = data.sourceInit;

		// Mettre à jour la valeur de l'autocomplete (depuis l'initialisation ou la sélection)
		$input.on('autocompletesetitem', function (ev, item) {
			$inputKey.val(item.value);
			$input.val(item.label);
			$.each($inputKey.data('autocomplete') || {}, function (k, v) {
				$inputKey.data('autocomplete')[k] = item[k] || null;
			});
			return false;
		});

		// Initialisation du champ d'autocomplete
		// On peut déclencher l'initialisation d'un formulaire avec
		// $.when($input.data('deferred')).done(function () { $form.trigger('refresh'); });
		var deferred;
		if ($inputKey.val()) {
			deferred = $.getJSON(sourceInit, { "id": $inputKey.val() }, function (item) {
				$input.trigger('autocompletesetitem', [item || { 'value': '', 'label': '' }]);
			});
		} else {
			deferred = $.Deferred();
			deferred.resolve();
		}
		$input.data('deferred', deferred);

		// Définir l'autocomplete
		$input.autocomplete($.extend({
			search: function (event, ui) {
				$inputKey.val('');
			},
			focus: function (event, ui) {
				return false;
			},
			select: function (event, ui) {
				$input.trigger('autocompletesetitem', [ui.item]);
				$input.trigger('change');
				return false;
			},
			minLength: 2
		}, data));
		$input.attr('autocomplete', 'off');

		// Forcer la suppression de la valeur si la saisie est vide
		$input.on('change keyup blur', function () {
			if (this.value == '') {
				$inputKey.val('');
			}
		});

	});

	// Fix pour le bug du double click pour valider une selection dans la liste de choix
	$(".autocomplete").autocomplete({
		open: function (event, ui) {
			if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {
				$('.ui-autocomplete').off('menufocus hover mouseover mouseenter');
			}
		}
	});

	/**
	 * Token input (autocomplete multiple)
	 */
	$('.token-input').each(function () {
		var $self = $(this);
		var $data = $self.data('tokenInput');
		$data.placeholder = $self.attr('placeholder');
		if ($self.val()) {
			$.getJSON($data.acUrlInit, $.param({ ids: $self.val().split(/,/) }), function (prePopulate) {
				$data.prePopulate = prePopulate;
				$self.tokenInput($data.acUrl, $data);
			});
		} else {
			$self.tokenInput($data.acUrl, $data);
		}
	});

	/**
	 * Sumo single and multiselect
	 */
	$(document).on('donuts.init', '.single-select-new', function () {
		$(this).SumoSelect({});
	});
	$('.single-select-new').trigger('donuts.init');

	$(document).on('donuts.init', '.multi-select-new', function () {
		$(this).SumoSelect({
			captionFormat : '{0} sélectionnés',
			captionFormatAllSelected : '{0} tous sélectionnés!',
			csvDispCount: 10
		});
	});
	$('.multi-select-new').trigger('donuts.init');

	/**
	 * Événement qui libère le formulaire des contraintes javascript avant de le soumettre
	 * @see http://stackoverflow.com/questions/17885843/ajax-request-before-regular-form-is-being-submitted
	 */
	$("form").on('trueSubmit', function () {
		$(this).off('submit');
		$(this).trigger('submit');
	});

	/**
	 * Checkbox stylées
	 */
	$('.options-group').has("input:checkbox").addClass("options-group-checkbox");

	$('.options-group-checkbox .option input:checkbox').on('refresh', function () {
		$(this).closest('.option').toggleClass('option-active', $(this)[0].checked);
	});
	$('.options-group-checkbox .option input:checkbox').on('change', function () {
		$(this).closest('.option').find('input:checkbox').trigger('refresh');
	});
	$('.options-group-checkbox .option input:checkbox').trigger('refresh');
	// Click management :
	// - a click event on the <label> will bubble up to the <div.option>
	// - a click event on the <label> will trigger a click event on the <input:radio>
	// - a click event on the <input:radio> will bubble up to the <div.option>
	// There is a significant risk to induce multiple triggers on the <div.option>.
	// The solution is to stopPropagation() of the click event from <label> and <input:radio> to <div.option>
	// <div.option>, if targeted or triggered anyway will trigger <input:radio>.
	//
	// =======v=================================+==== <div.option>
	//    x   v             x    x              ^
	//    ^   v             ^    ^              ^
	//   =+===+= <input> ===+====+=== <label> ==+== <img>
	//                      ^
	//                    ==+== <a>
	$('.options-group-checkbox .option').on('click', function () {
		$(this).find('input:checkbox').trigger('click');
	});
	$('.options-group-checkbox .option label, .options-group-checkbox .option input:checkbox').on('click', function (ev) {
		ev.stopPropagation();
	});

	/**
	 * Radio stylés
	 */
	$('.options-group').has("input:radio").addClass("options-group-radio");
	$('.options-group-radio .option input:radio').on('refresh', function () {
		$(this).closest('.option').toggleClass('option-active', $(this)[0].checked);
	});
	$('.options-group-radio .option input:radio').on('change', function () {
		$(this).closest('.options-group-radio').find('.option input:radio').trigger('refresh');
	});
	$('.options-group-radio .option input:radio').trigger('refresh');
	// Click management : voir ci-dessus
	$('.options-group-radio .option').on('click', function () {
		$(this).find('input:radio').trigger('click');
	});
	$('.options-group-radio .option label, .options-group-radio .option input:radio').on('click', function (ev) {
		ev.stopPropagation();
	});

	/**
	 * Icônes input
	 */
	$('.icon-input').wrap("<div class='icon-input-wrapper'></div>");

	$('.icon-input-wrapper').has(".icon-input-search").addClass("icon-input-search");
	$('.icon-input-wrapper').has(".icon-input-euros").addClass("icon-input-euros");
	$('.icon-input-wrapper').has(".icon-input-surface").addClass("icon-input-surface");
	$('.icon-input-wrapper').has(".icon-input-euros-surface").addClass("icon-input-euros-surface");
	$('.icon-input-wrapper').has(".icon-input-percent").addClass("icon-input-percent");
	$('.icon-input-wrapper').has(".icon-input-calendar").addClass("icon-input-calendar");
	$('.icon-input-wrapper').has(".icon-input-people").addClass("icon-input-people");

	$('.icon-input-wrapper').has(".icon-input-light-green").addClass("icon-input-light-green");
	$('.icon-input-wrapper').has(".icon-input-yellow").addClass("icon-input-yellow");
	$('.icon-input-wrapper').has(".icon-input-amber").addClass("icon-input-amber");
	$('.icon-input-wrapper').has(".icon-input-deep-orange").addClass("icon-input-deep-orange");
	$('.icon-input-wrapper').has(".icon-input-pink").addClass("icon-input-pink");
	$('.icon-input-wrapper').has(".icon-input-green").addClass("icon-input-green");
	$('.icon-input-wrapper').has(".icon-input-lime").addClass("icon-input-lime");
	$('.icon-input-wrapper').has(".icon-input-red").addClass("icon-input-red");
	$('.icon-input-wrapper').has(".icon-input-corail").addClass("icon-input-corail");
	$('.icon-input-wrapper').has(".icon-input-orange").addClass("icon-input-orange");
	$('.icon-input-wrapper').has(".icon-input-purple").addClass("icon-input-purple");
	$('.icon-input-wrapper').has(".icon-input-indigo").addClass("icon-input-indigo");
	$('.icon-input-wrapper').has(".icon-input-light-blue").addClass("icon-input-light-blue");
	$('.icon-input-wrapper').has(".icon-input-blue").addClass("icon-input-blue");
	$('.icon-input-wrapper').has(".icon-input-teal").addClass("icon-input-teal");
	$('.icon-input-wrapper').has(".icon-input-almond").addClass("icon-input-almond");

	/*-----------------------
	  MAP
	-----------------------*/
	/**
	 * Mappy
	 */
	var DIR_MAPPY_IMG = "//www.pap.fr/vendor/L.Mappy-7.7.3/dist/images/";

	$(".mappy").each(function () {
		var $self = $(this);
		L.Mappy.setImgPath(DIR_MAPPY_IMG);

		// Créer la carte
		var mapOptions = $.extend(true, {
			clientId: 'pap',
			center: [47, 1.5],
			zoom: 3,
			tileLayerOptions: {
				minZoom: 0,
				maxZoom: 19
			},
			layersControl: {
				publicTransport: true,
				traffic: false,
				viewMode: false,
				trafficLegend: false
			},
			logoControl: {
				position: "topright"
			}
		}, $self.data('mappy') || {});
		var map = new L.Mappy.Map($self.attr('id'), mapOptions);
		$self.data('map', map);
		
		// fitBounds
		if ($self.data('mappy').fitBounds) {
			map.fitBounds($self.data('mappy').fitBounds);
		}

		// Marqueurs
		$self.find('.mappy-marker').each(function () {

			// Options
			var markerOptions = $.extend({
				"riseOnHover": true,
				"riseOffset": 1000
			}, $(this).data('mappyMarker') || {});

			// Icône personnnalisée
			if (markerOptions.icon) {
				markerOptions.icon = L.icon({
					iconUrl: markerOptions.icon,
					iconSize: [25, 41], // size of the icon
					iconAnchor: [12, 40], // point of the icon which will correspond to marker's location
					popupAnchor: [0, -44] // point from which the popup should open relative to the iconAnchor
				});
			}

			// Marker
			if (markerOptions.center) {
				var marker = L.marker(markerOptions.center, markerOptions).addTo($self.data('map'));
				if ($.trim($(this).html()) != '') {
					marker.bindPopup($(this).html());
				}
				if (markerOptions.autoOpen) {
					marker.openPopup();
				}
			}

			// on supprime les div dans lesquels il y a les marqueurs
			$(this).remove();
		});

	});

	/**
	 * jVectorMap
	 */
	if ($('.jvectormap').length) {
		// Les objets qui contiennent des cartes sont groupés par carte
		var containersBySrc = {};
		$('.jvectormap').each(function () {
			var src = $(this).data('jvectormap').map;
			containersBySrc[src] = containersBySrc[src] || [];
			containersBySrc[src].push($(this));
		});
		// Pour chaque carte, on charge la définition de la carte, et on l'utilise sur le gorupe d'objets correspondant
		$.each(containersBySrc, function (src, containers) {
			$.getJSON(src, function (data) {
				$.fn.vectorMap('addMap', src, data);
				$(containers).each(function () {
					var $container = $(this);
					$container.vectorMap($.fn.extend({
						"backgroundColor": "#ffffff",
						"regionStyle": {
							"initial": {
								"fill": "#e2e2e2",
								"fill-opacity": 1,
								"stroke": "#c5c5c5",
								"stroke-width": 2,
								"stroke-opacity": 1
							},
							"hover": {
								"fill": "#c2c2c2",
								"fill-opacity": 1,
								"stroke": "#a5a5a5",
								"stroke-width": 2,
								"stroke-opacity": 1
							},
							"selected": {
								"fill": "#27b5aa",
								"fill-opacity": 1,
								"stroke": "#ffffff",
								"stroke-width": 2,
								"stroke-opacity": 1
							},
							"selectedHover": {
								"fill": "#8a8a9a",
								"fill-opacity": 1,
								"stroke": "#a5a5a5",
								"stroke-width": 2,
								"stroke-opacity": 1
							}
						},
						"zoomOnScroll": false,
						"onRegionTipShow": function () { $container.trigger("jvectormap.regiontipshow", Array.prototype.slice.call(arguments, 1)); },
						"onRegionOver": function () { $container.trigger("jvectormap.regionover", Array.prototype.slice.call(arguments, 1)); },
						"onRegionOut": function () { $container.trigger("jvectormap.regionout", Array.prototype.slice.call(arguments, 1)); },
						"onRegionClick": function () { $container.trigger("jvectormap.regionclick", Array.prototype.slice.call(arguments, 1)); },
						"onRegionSelected": function () { $container.trigger("jvectormap.regionselected", Array.prototype.slice.call(arguments, 1)); },
						"onMarkerTipShow": function () { $container.trigger("jvectormap.markertipshow", Array.prototype.slice.call(arguments, 1)); },
						"onMarkerOver": function () { $container.trigger("jvectormap.markerover", Array.prototype.slice.call(arguments, 1)); },
						"onMarkerOut": function () { $container.trigger("jvectormap.markerout", Array.prototype.slice.call(arguments, 1)); },
						"onMarkerClick": function () { $container.trigger("jvectormap.markerclick", Array.prototype.slice.call(arguments, 1)); },
						"onMarkerSelected": function () { $container.trigger("jvectormap.markerselected", Array.prototype.slice.call(arguments, 1)); },
						"onViewportChange": function () { $container.trigger("jvectormap.viewportchange", Array.prototype.slice.call(arguments, 1)); }
					}, $container.data('jvectormap')));
					$container.trigger('jvectormap.ready');
				});
			});
		});
	}
	/**********************************************************************************************
	 *** Consent
	 **********************************************************************************************/

	/**
	 * YouTube
	 */

	$(".consent-youtube").doOnce(function () {

		$(document).on("click", ".consent-youtube-allow", function () {
			Cookies.set("consent_youtube", 1, { expires: 365 });
			$(".consent-youtube").trigger("refresh");
			$("#dialog-box-consent-youtube").dialog("close");
		});

		$(document).on("click", ".consent-youtube-disallow", function () {
			Cookies.remove("consent_youtube");
			$(".consent-youtube").trigger("refresh");
			$("#dialog-box-consent-youtube").dialog("close");
			return false;
		});

		$(".consent-youtube").on("refresh", function () {
			var $container = $(this);
			var consent_youtube = Cookies.get("consent_youtube");
			var id = $container.data("youtube").id;
			var title = $container.attr("title");
			var width = $container.width();
			var height = $container.height();
			if (!height) {
				height = Math.floor(width * 9 / 16);
			}

			// Consentement autorisé
			if (consent_youtube) {
				$container.html(""
					+ "<iframe width=\"" + width + "\" height=\"" + height + "\" src=\"https://www.youtube.com/embed/" + id + "?rel=0\" title=\"" + title + "\" frameborder=\"0\" allowfullscreen></iframe>"
				);
			}

			// Consentement refusé
			else {
				$container.html(""
					+ "<a href=\"#dialog-box-consent-youtube\" class=\"dialog-box-handler\" style=\"display: block; width: " + width + "px; height: " + height + "px;\">"
					+ "	<img src=\"https://i.ytimg.com/vi/" + id + "/maxresdefault.jpg\" alt=\"" + title + "\"/>"
					+ "</a>"
				);
				$container.find('a').imgLiquid();
			}

		});

		$(".consent-youtube").trigger("refresh");

	});

	$('#isOptedOut_YouTube').doOnce(function () {
		var $isOptedOut_YouTube = $('#isOptedOut_YouTube');
		$isOptedOut_YouTube.prop("checked", !Cookies.get("consent_youtube"));
		$isOptedOut_YouTube.trigger("refresh");
		$isOptedOut_YouTube.on("click", function () {
			if ($isOptedOut_YouTube.is(":checked"))
				Cookies.remove("consent_youtube");
			else
				Cookies.set("consent_youtube", 1, { expires: 365 });
		});

	});

});
